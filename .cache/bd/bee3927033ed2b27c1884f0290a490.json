{"id":"hNHB","dependencies":[{"name":"/Users/ishansengupta/Desktop/front-end/starter-three/package.json","includedInParent":true,"mtime":1608232663657}],"generated":{"js":"module.exports=\"#define GLSLIFY 1\\nvarying vec2 vUv;\\nvarying vec3 vPos;\\nvarying vec2 vCoordinates;\\nattribute vec3 aCoordinates;\\nattribute float aSpeed;\\nattribute float aOffset;\\nattribute float aDirection;\\nattribute float aPress;\\n\\nuniform float move;\\nuniform float time;\\nuniform vec2 mouse;\\nuniform float mousePressed;\\nuniform float transition;\\n\\nvoid main(){\\n\\n    vUv = uv;\\n    vec3 pos = position;\\n\\n    //NOT STABLE\\n    pos.x += sin(move*aSpeed) * 3.;\\n    pos.y += sin(move*aSpeed) * 3.;\\n    pos.z = mod(position.z + move*200.*aSpeed + aOffset, 2000.) - 1000.;\\n \\n    //STABLE\\n\\n    vec3 stable = position;\\n    float dist =  distance(stable.xy, mouse);\\n    float area = 1. - smoothstep(0.,500., dist);\\n\\n    stable.x += 50.*sin(0.1 * time*aPress)*aDirection * area*mousePressed;\\n    stable.y += 50.*sin(0.1 * time*aPress)*aDirection * area*mousePressed;\\n    stable.z += 200.*cos(0.1 * time*aPress)*aDirection * area*mousePressed;\\n\\n    pos = mix(pos, stable, transition);\\n\\n    //STABLE\\n    vec4 mvPosition = modelViewMatrix * vec4(pos, 1.);\\n\\n    gl_PointSize =3000. * (1. / - mvPosition.z );\\n    gl_Position = projectionMatrix * mvPosition;\\n\\n    vCoordinates = aCoordinates.xy;\\n    vPos = pos; \\n\\n}\";"},"sourceMaps":{"js":{"mappings":[{"source":"shaders/vertex.glsl","name":"module","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"shaders/vertex.glsl","name":"exports","original":{"line":1,"column":7},"generated":{"line":1,"column":7}},{"source":"shaders/vertex.glsl","original":{"line":1,"column":15},"generated":{"line":1,"column":15}}],"sources":{"shaders/vertex.glsl":"module.exports=\"#define GLSLIFY 1\\nvarying vec2 vUv;\\nvarying vec3 vPos;\\nvarying vec2 vCoordinates;\\nattribute vec3 aCoordinates;\\nattribute float aSpeed;\\nattribute float aOffset;\\nattribute float aDirection;\\nattribute float aPress;\\n\\nuniform float move;\\nuniform float time;\\nuniform vec2 mouse;\\nuniform float mousePressed;\\nuniform float transition;\\n\\nvoid main(){\\n\\n    vUv = uv;\\n    vec3 pos = position;\\n\\n    //NOT STABLE\\n    pos.x += sin(move*aSpeed) * 3.;\\n    pos.y += sin(move*aSpeed) * 3.;\\n    pos.z = mod(position.z + move*200.*aSpeed + aOffset, 2000.) - 1000.;\\n \\n    //STABLE\\n\\n    vec3 stable = position;\\n    float dist =  distance(stable.xy, mouse);\\n    float area = 1. - smoothstep(0.,500., dist);\\n\\n    stable.x += 50.*sin(0.1 * time*aPress)*aDirection * area*mousePressed;\\n    stable.y += 50.*sin(0.1 * time*aPress)*aDirection * area*mousePressed;\\n    stable.z += 200.*cos(0.1 * time*aPress)*aDirection * area*mousePressed;\\n\\n    pos = mix(pos, stable, transition);\\n\\n    //STABLE\\n    vec4 mvPosition = modelViewMatrix * vec4(pos, 1.);\\n\\n    gl_PointSize =3000. * (1. / - mvPosition.z );\\n    gl_Position = projectionMatrix * mvPosition;\\n\\n    vCoordinates = aCoordinates.xy;\\n    vPos = pos; \\n\\n}\";"},"lineCount":null}},"error":null,"hash":"b47ecc45be72be2bc995618076055492","cacheData":{"env":{}}}